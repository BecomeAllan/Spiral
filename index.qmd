---
title: "Spiral"
author: "Allan Almeida, Ana Clara Valério, Davi Esmeraldo, Davi Wentrick, Gabriel Veiga, Gabriela Lobo, Júlia Garcia, Júlia Borges, Natália Vieira, Stephany Lima"

format:
  revealjs: 
    controls-layout: bottom-right
    controls-tutorial: true
    slide-number: true
    theme: beige
    scrollable: true
    chalkboard: 
      buttons: true
---




```{r}
#| echo: false
#| warning: false
#| include: false
library(tidyverse)
library(plotly)
library(glue)
library(htmlwidgets)
library(readxl)
```

```{r}
#| echo: false
#| #| warning: false
X81bacias <- read_excel("data/81bacias.xlsx")
pred_data <- read_csv("data/pred_data.csv")


axx <- list(
  title = "",
  showgrid = FALSE,
  zeroline = FALSE,
  showticklabels = FALSE
)

axy <- list(
  title = "",
  showgrid = FALSE,
  zeroline = FALSE,
  showticklabels = FALSE
)

axz <- list(
  title = ""
)

######### DATA

data = pred_data[pred_data$bacia %in% X81bacias$Estação, c("bacia", "ano", "mes", "P1", "P2")]
data[is.na(data)] = 0

data_a = data %>%
    mutate(P = P1 + P2) %>%
    group_by(bacia, ano) %>%
    mutate(media_ano = mean(P),
           "P/media_ano"=P/media_ano) %>% select(bacia,ano,mes,P, media_ano,"P/media_ano") %>%
  ungroup()

data_a$bacia = as.factor(data_a$bacia)
```

## Introdução

Pesquisa sobre a vazão das bacias do cerrado
- 81 bacias
- COP27


O que fizemos ao longo desse projeto
Canal Riffomonas

- Gráfico 2D
- Animação
- Gráfico 3D


## Métodologia

::: {style="text-align: center; margin-top: 1em"}
Tratamento dos dados

Proporção

Ordenação das bacias

Pacotes utilizados no R

Suavização


:::


## Spiral 2D

<video controls>
  <source src="VID-20230215-WA0001.mp4" type="video/mp4">
</video>

## Spiral 3D - 1 {.smaller}

```{r}

a= left_join(
  data_a %>% 
    filter(ano==1985, mes ==1) %>%
    select(bacia,Start=media_ano)
  ,
  data_a #%>% distinct(ano,mes,bacia,media_ano)
) %>%
  
  group_by(bacia, ano) %>%
  mutate(index=row_number(),
         media_ref1985 = round(P/Start,4) ,
         radius = media_ref1985,
         theta = 2 * pi * (index-1)/12) %>%
  mutate(
    x = radius * sin(theta),
    y = radius * cos(theta),
    z = ano + theta/(2 * pi) ,
    label = glue("{mes}/{ano} - {bacia}\n Média|1985 - {media_ref1985*100}%")
  ) %>% arrange(ano, mes) %>% ungroup()


k = a %>% ungroup()
```


:::: {.columns}

::: {.column width="40%" }

- Cada angulo é uma bacia
- Série Temporal Anual


:::


::: {.column width="60%"}



```{r}
#| fig-width: 5
#| fig-height: 4
#| cache: true

k = left_join(
  data_a %>% 
    filter(ano==1985, mes ==1) %>%
    select(bacia,Start=media_ano)
  ,
  data_a %>% distinct(bacia, ano, media_ano)
) %>% 
  
  group_by(ano) %>%
  mutate(index=row_number(),
         media_ref1985 = round(media_ano/Start,4) ,
         radius = 0.5 + media_ref1985,
         theta = 2*pi * (index-1)/81) %>% #arrange(ano) %>% head(10) #%>% view()
  mutate(
    x = radius * sin(theta),
    y = radius * cos(theta),
    z = ano ,
    label = glue("{ano} - {bacia}\n Média|1985 - {media_ref1985*100}%")
  ) %>% arrange(ano) %>% ungroup()


{
  
  
color = list(width = 4, color = ~media_ref1985,
                                       cmid = .5,# cmin=min(t_data$t_diff), cmax=max(t_data$t_diff),
                                       colorscale = list(c(1, "#03e8fc"),
                                                         c(1.5, "#0d00ff"),
                                                         c(3,'#c70000')
                                       ))

  
fig <- plot_ly(data = k[ (k$bacia %in% levels(k$bacia)[1]) , ] ,
        x = ~x, y = ~y, z = ~z, text = ~label,
        hoverinfo = "text",
        opacity  = .8,
        type = 'scatter3d',
        mode = 'lines',
        connectgaps = TRUE,
        line = color) %>%
  layout(scene = list(xaxis=axx,
                      yaxis=axy,
                      zaxis=axz))
  




for(i in 2:length(levels(a$bacia)) ){
  fig <- fig %>% add_trace(data = k[ (k$bacia %in% levels(k$bacia)[i]) , ] ,
                           x = ~x, y = ~y, z = ~z, text = ~label,
                           connectgaps = TRUE,
                           hoverinfo = "text",
                           opacity  = .8,
                           type = 'scatter3d',
                           mode = 'lines',
                           showlegend = F,
                           line = color)
  
}

fig
  }

```
:::

::::


## Spiral 3D - 2 {.smaller}

```{r}
#| cache: true
test = left_join(
  data_a %>% 
    filter(ano==1985, mes ==1) %>%
    select(bacia,Start=media_ano)
  ,
  data_a %>% distinct(bacia, ano, media_ano)
) %>% mutate(
  media_ref1985 = round(media_ano/Start,4),
         radius = media_ref1985
  )


k = test %>%
  group_by(ano) %>% arrange(desc(media_ref1985)) %>%
  mutate(index=row_number(),
         theta =  pi * (index-1)/81) %>% #arrange(ano) %>% head(100) %>% view()
  mutate(
    x = radius * cos(theta),
    y = radius * sin(theta),
    z = ano ,
    label = glue("{ano} - {bacia}\n Média|1985 - {media_ref1985*100}%")
  ) %>% ungroup()
```

:::: {.columns}

::: {.column width="60%"}

- Cada curva é uma densidade da evasão de água no ano das bacias relativas a 1985 rotacionadas em um circulo. O raio $r$ é dado por $r=P(\text{X=Evasão relativa a 1985}|\text{Ano})$ e o ângulo é uma transformação de $x$ para $\theta$ dada por $f: \mathbb{R} \rightarrow [0,2\pi]$

- $f(x)={2\pi\over 1+ e^{-x}}$

- A curva de referência em vermelho é $x\sim N(0,1)$ rotacionada no circulo, no qual as cordenadas são dadas por $(r\cos(\theta), rsin(\theta))$.

:::

::: {.column width="40%"}

```{r}
#install.packages(library(circular))
#| cache: true
#| fig-width: 1
#| fig-height: 1

a = 1985
x = as.vector(test[test$ano == a,"media_ref1985"])
d = density(x$media_ref1985)

#plot(d)
len = length(d$x)

f <- function(x) {
  2*pi/{1+exp(-x)}
}

data = data.frame(index= 1:len) %>% mutate(
           #theta =   2*pi * (index-1)/len,
           theta =  f(d$x)
           )

data$radius = d$y
data$dx = d$x
data$dy = d$y

data = data %>% mutate(
           x = radius * cos(theta),
           y = radius * sin(theta),
           z = a,
           label= glue("{a}\n Média|1985 - {round(dx,2)*100}%"))


color = list(width = 6, color = ~dx, colorscale = 'Viridis', cmin = 0, cmax = 1.5)



fig <- plot_ly(data = data ,
        x = ~x, y = ~y, z = ~z, text = ~label,
        hoverinfo = "text",
        opacity  = 1,
        type = 'scatter3d',
        mode = 'lines',
        connectgaps = TRUE,
        line = color) %>%
  layout(scene = list(xaxis=axx,
                      yaxis=axy,
                      zaxis=axz))





for (a in unique(test$ano) ) {
  x = as.vector(test[test$ano == a,"media_ref1985"])
  d = density(x$media_ref1985)
  len = length(d$x)
  
  data = data.frame(index= 1:len) %>% mutate(
             #theta =  2*pi * (index-1)/len
             theta =  f(d$x)
             )
  
  data$radius =  d$y
  data$dx = d$x
  data$dy = d$y
  
  data = data %>% mutate(
             x = radius * cos(theta),
             y = radius * sin(theta),
             z = a,
             label= glue("{a}\n Densidade {round(dy,3)} \n Média|1985: {round(dx*100,2)}%"))
  
  fig <- fig %>% add_trace(data = data,
                           x = ~x, y = ~y, z = ~z, text = ~label,
                           connectgaps = TRUE,
                           hoverinfo = "text",
                           opacity  = 0.8,
                           type = 'scatter3d',
                           mode = 'lines',
                           showlegend = F,
                           line = color)

  
  ###
  
  x = as.vector(test[test$ano == 1985,"media_ref1985"])
  d = density(x$media_ref1985)
  
  #plot(d)
  len = length(d$x)
  
  data = data.frame(index= 1:len) %>% mutate(
    theta =  f(d$x))
#             theta =   2*pi * (index-1)/len)
  
  data$radius = d$y
  data$dx = d$x
  data$dy = d$y
  
  data = data %>% mutate(
             x = radius * cos(theta),
             y = radius * sin(theta),
             z = a,
             label= glue("{a}\n Densidade {round(dy,3)} \n Média|1985: {round(dx*100,2)}%"))


  fig <- fig %>% add_trace(data = data,
                           x = ~x, y = ~y, z = ~z,
                           connectgaps = TRUE,
                           hoverinfo = "text",
                           opacity  = 0.5,
                           type = 'scatter3d',
                           mode = 'lines',
                           showlegend = F,
                           line = list(width = 2 , color = "red")
                           )
}


fig


```


:::

::::



## Spiral 3D - 3 {.smaller}

:::: {.columns}

::: {.column width="40%"}

- Cada curva é uma densidade da evasão de água no ano das bacias relativas as 1985. 

:::

::: {.column width="60%"}

```{r}
#| fig-width: 5
#| fig-height: 4
#| cache: true
a = 1985
x = as.vector(test[test$ano == a,"media_ref1985"])
d = density(x$media_ref1985)
len = length(d$x)
data = data.frame(index= 1:len)
data$x = d$x
data$y = d$y
data$z = a

data = data %>% mutate(
           label= glue("{a}\n Média|1985 - {x*100}%"))

color = list(width = 4, color = ~x,
                                       cmid = 0.5,# cmin=min(t_data$t_diff), cmax=max(t_data$t_diff),
                                       colorscale = list(c(0, "#ffffff"),
                                                         c(1.5, "#0d00ff"),
                                                         c(3,'#c70000')
                                       ))



fig <- plot_ly(data = data ,
        x = ~x, y = ~y, z = ~z, text = ~label,
        hoverinfo = "text",
        opacity  = 1,
        type = 'scatter3d',
        mode = 'lines',
        connectgaps = TRUE,
        line = color) %>%
  layout(scene = list(xaxis=axx,
                      yaxis=axy,
                      zaxis=axz))





for (a in unique(test$ano) ) {
  x = as.vector(test[test$ano == a,"media_ref1985"])
  d = density(x$media_ref1985)
  len = length(d$x)
  
  data = data.frame(index= 1:len)
  data$x = d$x
  data$y = d$y
  data$z = a
  
  data = data %>% mutate(
           label= glue("{a}\n Média|1985 - {x*100}%"))

  
  fig <- fig %>% add_trace(data = data,
                           x = ~x, y = ~y, z = ~z, text = ~label,
                           connectgaps = TRUE,
                           hoverinfo = "text",
                           opacity  = 1,
                           type = 'scatter3d',
                           mode = 'lines',
                           showlegend = F,
                           line = color)
  
    
  x = as.vector(test[test$ano == 1985,"media_ref1985"])
  d = density(x$media_ref1985)
  
  #plot(d)
  len = length(d$x)
  
  data = data.frame(index= 1:len) %>% mutate(
             theta =   pi * (index-1)/len)
  
  data$radius = d$y*100
  data$x = d$x
  data$y = d$y
  data$z = a
  
  data = data %>% mutate(
             label= glue("{a} \n Média|1985 - {x*100}%"))


  fig <- fig %>% add_trace(data = data,
                           x = ~x, y = ~y, z = ~z,
                           connectgaps = TRUE,
                           hoverinfo = "text",
                           opacity  = 0.8,
                           type = 'scatter3d',
                           mode = 'lines',
                           showlegend = F,
                           line = list(width = 1 , color = "black")
                           )
  
  
}




fig %>% layout(autosize = F, yaxis = list(
                      scaleanchor = "x",
                      scaleratio = 1))
```


:::

::::






## Referências


![Video](Captura de tela 2023-02-15 005435.png)
