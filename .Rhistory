y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 4,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 4,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 4,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 4,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 4,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 4,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 4,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 4,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 4,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 4,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 4,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 4,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 6,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 6,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 6,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
r = seq(0, 6,0.01)
x = rnorm(1)
length(x)
steps = 10
y = matrix(0, nrow = steps, length(r))
for (s in 1:steps) {
x=r*x*(x-1)
y[s,] = round(x,2)
}
plot(r,colMeans(y)/apply(y, 2, var) )
{
n=3
f1 = function(x) {sin(x) }
f2 = function(x) {sin(10*x+pi/3)}
f3 = function(x) {f1(x)*f2(x)}
funs = c(f1,f2,f3)
par(mfrow=c(n,1))
for (fu in 1:n) {
plot(theta, funs[[fu]](theta), axes=FALSE, type = 'l')
axis(side=2)                      #plot x axis (side=1)
axis(side=1, at=c(-pi, -pi/2, -pi/4, 0 ,pi/4, pi/2, pi),
labels=expression(-pi, -pi/2, -pi/4, 0, pi/4, pi/2, pi))
abline(0, 0)
}
round(sum(f1(theta)*f2(theta)),5)
}
f1 = function(x) {sin(x)}
f2 = function(x) {sin(10*x)}
{
n=3
f1 = function(x) {sin(x)}
f2 = function(x) {sin(10*x)}
f3 = function(x) {f1(x)*f2(x)}
funs = c(f1,f2,f3)
par(mfrow=c(n,1))
for (fu in 1:n) {
plot(theta, funs[[fu]](theta), axes=FALSE, type = 'l')
axis(side=2)                      #plot x axis (side=1)
axis(side=1, at=c(-pi, -pi/2, -pi/4, 0 ,pi/4, pi/2, pi),
labels=expression(-pi, -pi/2, -pi/4, 0, pi/4, pi/2, pi))
abline(0, 0)
}
round(sum(f1(theta)*f2(theta)),5)
}
{
n=3
f1 = function(x) {sin(x*30)}
f2 = function(x) {sin(10*x)}
f3 = function(x) {f1(x)*f2(x)}
funs = c(f1,f2,f3)
par(mfrow=c(n,1))
for (fu in 1:n) {
plot(theta, funs[[fu]](theta), axes=FALSE, type = 'l')
axis(side=2)                      #plot x axis (side=1)
axis(side=1, at=c(-pi, -pi/2, -pi/4, 0 ,pi/4, pi/2, pi),
labels=expression(-pi, -pi/2, -pi/4, 0, pi/4, pi/2, pi))
abline(0, 0)
}
round(sum(f1(theta)*f2(theta)),5)
}
mode(=1)
mode(-1)
abs(-1)
{
/
{
/
n=3
f1 = function(x) {sin(x*30)}
f2 = function(x) {sin(10*x)}
f3 = function(x) {abs(f1(x))*abs(f2(x))}
funs = c(f1,f2,f3)
par(mfrow=c(n,1))
for (fu in 1:n) {
plot(theta, funs[[fu]](theta), axes=FALSE, type = 'l')
axis(side=2)                      #plot x axis (side=1)
axis(side=1, at=c(-pi, -pi/2, -pi/4, 0 ,pi/4, pi/2, pi),
labels=expression(-pi, -pi/2, -pi/4, 0, pi/4, pi/2, pi))
abline(0, 0)
}
f1 = function(x) {sin(x*30)}
f2 = function(x) {sin(10*x)}
f3 = function(x) {abs(f1(x))+abs(f2(x))}
funs = c(f1,f2,f3)
par(mfrow=c(n,1))
for (fu in 1:n) {
plot(theta, funs[[fu]](theta), axes=FALSE, type = 'l')
axis(side=2)                      #plot x axis (side=1)
axis(side=1, at=c(-pi, -pi/2, -pi/4, 0 ,pi/4, pi/2, pi),
labels=expression(-pi, -pi/2, -pi/4, 0, pi/4, pi/2, pi))
abline(0, 0)
}
n=3
f1 = function(x) {sin(x*30)}
f2 = function(x) {abs(sin(10*x)) }
f3 = function(x) {abs(f1(x))+abs(f2(x))}
funs = c(f1,f2,f3)
par(mfrow=c(n,1))
for (fu in 1:n) {
plot(theta, funs[[fu]](theta), axes=FALSE, type = 'l')
axis(side=2)                      #plot x axis (side=1)
axis(side=1, at=c(-pi, -pi/2, -pi/4, 0 ,pi/4, pi/2, pi),
labels=expression(-pi, -pi/2, -pi/4, 0, pi/4, pi/2, pi))
abline(0, 0)
}
f1 = function(x) {sin(x*10)}
f2 = function(x) {abs(sin(10*x)) }
f3 = function(x) {abs(f1(x))+abs(f2(x))}
n=3
f1 = function(x) {sin(x*10)}
f2 = function(x) {abs(sin(10*x)) }
f3 = function(x) {abs(f1(x))+abs(f2(x))}
funs = c(f1,f2,f3)
par(mfrow=c(n,1))
for (fu in 1:n) {
plot(theta, funs[[fu]](theta), axes=FALSE, type = 'l')
axis(side=2)                      #plot x axis (side=1)
axis(side=1, at=c(-pi, -pi/2, -pi/4, 0 ,pi/4, pi/2, pi),
labels=expression(-pi, -pi/2, -pi/4, 0, pi/4, pi/2, pi))
abline(0, 0)
}
n=3
f1 = function(x) {sin(x*10)}
f2 = function(x) {abs(sin(10*x)) }
f3 = function(x) {exp(abs(f1(x))+abs(f2(x))) }
funs = c(f1,f2,f3)
par(mfrow=c(n,1))
for (fu in 1:n) {
plot(theta, funs[[fu]](theta), axes=FALSE, type = 'l')
axis(side=2)                      #plot x axis (side=1)
axis(side=1, at=c(-pi, -pi/2, -pi/4, 0 ,pi/4, pi/2, pi),
labels=expression(-pi, -pi/2, -pi/4, 0, pi/4, pi/2, pi))
abline(0, 0)
}
n=3
f1 = function(x) {sin(x*10)}
f2 = function(x) {abs(sin(10*x)) }
f3 = function(x) {exp(abs(f1(x))+abs(f2(x))) }
funs = c(f1,f2,f3)
par(mfrow=c(n,1))
for (fu in 1:n) {
plot(theta, funs[[fu]](theta), axes=FALSE, type = 'l')
axis(side=2)                      #plot x axis (side=1)
axis(side=1, at=c(-pi, -pi/2, -pi/4, 0 ,pi/4, pi/2, pi),
labels=expression(-pi, -pi/2, -pi/4, 0, pi/4, pi/2, pi))
abline(0, 0)
}
n=3
f1 = function(x) {sin(x*10)}
f2 = function(x) {abs(sin(10*x)) }
f3 = function(x) {exp(abs(f1(x))+abs(f2(x))) }
funs = c(f1,f2,f3)
par(mfrow=c(n,1))
for (fu in 1:n) {
plot(theta, funs[[fu]](theta), axes=FALSE, type = 'l')
axis(side=2)                      #plot x axis (side=1)
axis(side=1, at=c(-pi, -pi/2, -pi/4, 0 ,pi/4, pi/2, pi),
labels=expression(-pi, -pi/2, -pi/4, 0, pi/4, pi/2, pi))
abline(0, 0)
}
{
/
}
{
n=3
f1 = function(x) {sin(x*10)}
f2 = function(x) {abs(sin(10*x)) }
f3 = function(x) {exp((abs(f1(x))+abs(f2(x)) )^2 }
n=3
f1 = function(x) {sin(x*10)}
f2 = function(x) {abs(sin(10*x)) }
f3 = function(x) {exp((abs(f1(x))+abs(f2(x)) )^2 }
{
n=3
f1 = function(x) {sin(x*10)}
f2 = function(x) {abs(sin(10*x)) }
f3 = function(x) {exp((abs(f1(x))+abs(f2(x)) )^2) }
funs = c(f1,f2,f3)
par(mfrow=c(n,1))
for (fu in 1:n) {
plot(theta, funs[[fu]](theta), axes=FALSE, type = 'l')
axis(side=2)                      #plot x axis (side=1)
axis(side=1, at=c(-pi, -pi/2, -pi/4, 0 ,pi/4, pi/2, pi),
labels=expression(-pi, -pi/2, -pi/4, 0, pi/4, pi/2, pi))
abline(0, 0)
}
}
x = seq(-9,-1,0.1)
plot(x,(4*x+3)/(3-x) type='l')
plot(x,(4*x+3)/(3-x),type='l')
(4*x+3)/(3-x)
x = seq(-9,-1,0.1)
(4*x+3)/(3-x)
max((4*x+3)/(3-x))
min((4*x+3)/(3-x))
x = seq(-9,-1,0.01)
max((4*x+3)/(3-x))
min((4*x+3)/(3-x))
y = (4*x+3)/(3-x)
y = (3*x+3)/(x+4)
y
plot(x,y,type='l')
min(y)
max(y)
p <- plot_ly(t_data,
x = ~x, y = ~y, z = ~z, text = ~label,
hoverinfo = "text",
type = 'scatter3d',
mode = 'lines',
line = list(width = 10, color = ~t_diff,
cmid = 0,# cmin=min(t_data$t_diff), cmax=max(t_data$t_diff),
colorscale = list(c(0,'#0000FF'),
c(0.5, "#FFFFFF"),
c(1,'#FF0000')))) %>%
layout(scene = list(xaxis=axx,
yaxis=axy,
zaxis=axz))
p <- plot_ly(t_data,
x = ~x, y = ~y, z = ~z, text = ~label,
hoverinfo = "text",
type = 'scatter3d',
mode = 'lines',
line = list(width = 10, color = ~t_diff,
cmid = 0,# cmin=min(t_data$t_diff), cmax=max(t_data$t_diff),
colorscale = list(c(0,'#0000FF'),
c(0.5, "#FFFFFF"),
c(1,'#FF0000')))) %>%
layout(scene = list(xaxis=axx,
yaxis=axy,
zaxis=axz))
library(tidyverse)
library(plotly)
library(glue)
library(htmlwidgets)
t_data <- read_csv("data/GLB.Ts+dSST.csv", skip=1, na="***") %>%
select(year = Year, all_of(month.abb)) %>%
pivot_longer(-year, names_to="month", values_to="t_diff") %>%
drop_na() %>%
mutate(month = factor(month, levels = month.abb)) %>%
arrange(year, month) %>%
mutate(month_number = as.numeric(month),
radius = t_diff + 1.5,
theta = 2 * pi * (month_number-1)/12,
x = radius * sin(theta),
y = radius * cos(theta),
z = year,
label = glue("{month} {year}\n{t_diff}\u00B0 C"))
setwd("C:/Users/allan/OneDrive/√Årea de Trabalho/Pastas/Estatistica 3/Lab est 1/Spiral/climate_viz")
library(tidyverse)
library(plotly)
library(glue)
library(htmlwidgets)
t_data <- read_csv("data/GLB.Ts+dSST.csv", skip=1, na="***") %>%
select(year = Year, all_of(month.abb)) %>%
pivot_longer(-year, names_to="month", values_to="t_diff") %>%
drop_na() %>%
mutate(month = factor(month, levels = month.abb)) %>%
arrange(year, month) %>%
mutate(month_number = as.numeric(month),
radius = t_diff + 1.5,
theta = 2 * pi * (month_number-1)/12,
x = radius * sin(theta),
y = radius * cos(theta),
z = year,
label = glue("{month} {year}\n{t_diff}\u00B0 C"))
axx <- list(
title = "",
showgrid = FALSE,
zeroline = FALSE,
showticklabels = FALSE
)
axy <- list(
title = "",
showgrid = FALSE,
zeroline = FALSE,
showticklabels = FALSE
)
axz <- list(
title = ""
)
p <- plot_ly(t_data,
x = ~x, y = ~y, z = ~z, text = ~label,
hoverinfo = "text",
type = 'scatter3d',
mode = 'lines',
line = list(width = 10, color = ~t_diff,
cmid = 0,# cmin=min(t_data$t_diff), cmax=max(t_data$t_diff),
colorscale = list(c(0,'#0000FF'),
c(0.5, "#FFFFFF"),
c(1,'#FF0000')))) %>%
layout(scene = list(xaxis=axx,
yaxis=axy,
zaxis=axz))
saveWidget(p, "figures/climate_spiral_plotly.html")
p
setwd("C:/Users/allan/OneDrive/√Årea de Trabalho/Pastas/Estatistica 3/Lab est 1")
library(readxl)
X81bacias <- read_excel("data/81bacias.xlsx")
pred_data <- read_csv("data/pred_data.csv")
X81bacias
pred_data
source("~/.active-rstudio-document", echo=TRUE)
pred_data$bacia
pred_data$bacia %in% X81bacias
X81bacias
$bacia
pred_data$bacia
pred_data$bacia
a <- c(1, 2, 3)
b <- c(2, 3, 4, 5)
a %in% b
a
pred_data$bacia
pred_data$bacia %in% X81bacias
pred_data[pred_data$bacia %in% X81bacias]
pred_data[pred_data$bacia %in% X81bacias,]
str(a)
str(pred_data$bacia)
str(X81bacias)
str(X81bacias$Esta√ß√£o)
pred_data$bacia %in% X81bacias$Esta√ß√£o
pred_data[pred_data$bacia %in% X81bacias$Esta√ß√£o,]
data = pred_data[pred_data$bacia %in% X81bacias$Esta√ß√£o,]
data
data.head()
head(data)
data $%$ group_by(bacia)
data %>% group_by("bacia")
data %>% group_by("bacia") %>% select("p1")
data %>% group_by("bacia") %>% select("P1")
data %>% group_by(bacia) %>% select("P1")
data
data = pred_data[pred_data$bacia %in% X81bacias$Esta√ß√£o, c("bacia", "ano", "mes", "P1", "P2")]
data
data %>% select("P1")
data %>% select("bacia", "ano", "mes", "P1")
data %>% mutate(P= P1+P2)
min(data$P1)
X81bacias <- read_excel("data/81bacias.xlsx", na = 0)
pred_data <- read_csv("data/pred_data.csv", na = 0)
X81bacias <- read_excel("data/81bacias.xlsx")
pred_data <- read_csv("data/pred_data.csv")
pred_data <- read_csv("data/pred_data.csv", na = c(0))
is.na(data)
data[is.na(data)] = 0
data
data[is.na(data)] = 0
data = pred_data[pred_data$bacia %in% X81bacias$Esta√ß√£o, c("bacia", "ano", "mes", "P1", "P2")]
data %>% mutate(P= P1+P2)
data[is.na(data)] = 0
data = pred_data[pred_data$bacia %in% X81bacias$Esta√ß√£o, c("bacia", "ano", "mes", "P1", "P2")]
data
data[is.na(data)] = 0
data = pred_data[pred_data$bacia %in% X81bacias$Esta√ß√£o, c("bacia", "ano", "mes", "P1", "P2")]
data[is.na(data)] = 0
data %>% mutate(P= P1+P2)
data
data %>% mutate(P= P1+P2)
data %>% mutate(P= P1+P2) %>% group_by(bacia,ano) %>% mutate(m= mean(p))
